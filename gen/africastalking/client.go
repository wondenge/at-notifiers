// Code generated by goa v3.1.3, DO NOT EDIT.
//
// africastalking client
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package africastalking

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "africastalking" service client.
type Client struct {
	DeliveryReportNotifierEndpoint  endpoint.Endpoint
	IncomingMessageNotifierEndpoint endpoint.Endpoint
	BulkOptOutNotifierEndpoint      endpoint.Endpoint
	SubNotifierEndpoint             endpoint.Endpoint
	VoiceNotifierEndpoint           endpoint.Endpoint
	TransferEventNotifierEndpoint   endpoint.Endpoint
	UssdNotifierEndpoint            endpoint.Endpoint
	ValidationNotifierEndpoint      endpoint.Endpoint
	StatusNotifierEndpoint          endpoint.Endpoint
	PaymentNotifierEndpoint         endpoint.Endpoint
	C2bValidationNotifierEndpoint   endpoint.Endpoint
	B2cValidationNotifierEndpoint   endpoint.Endpoint
	IotNotifierEndpoint             endpoint.Endpoint
}

// NewClient initializes a "africastalking" service client given the endpoints.
func NewClient(deliveryReportNotifier, incomingMessageNotifier, bulkOptOutNotifier, subNotifier, voiceNotifier, transferEventNotifier, ussdNotifier, validationNotifier, statusNotifier, paymentNotifier, c2bValidationNotifier, b2cValidationNotifier, iotNotifier endpoint.Endpoint) *Client {
	return &Client{
		DeliveryReportNotifierEndpoint:  deliveryReportNotifier,
		IncomingMessageNotifierEndpoint: incomingMessageNotifier,
		BulkOptOutNotifierEndpoint:      bulkOptOutNotifier,
		SubNotifierEndpoint:             subNotifier,
		VoiceNotifierEndpoint:           voiceNotifier,
		TransferEventNotifierEndpoint:   transferEventNotifier,
		UssdNotifierEndpoint:            ussdNotifier,
		ValidationNotifierEndpoint:      validationNotifier,
		StatusNotifierEndpoint:          statusNotifier,
		PaymentNotifierEndpoint:         paymentNotifier,
		C2bValidationNotifierEndpoint:   c2bValidationNotifier,
		B2cValidationNotifierEndpoint:   b2cValidationNotifier,
		IotNotifierEndpoint:             iotNotifier,
	}
}

// DeliveryReportNotifier calls the "delivery_report_notifier" endpoint of the
// "africastalking" service.
func (c *Client) DeliveryReportNotifier(ctx context.Context, p *DeliveryReportPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.DeliveryReportNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// IncomingMessageNotifier calls the "incoming_message_notifier" endpoint of
// the "africastalking" service.
func (c *Client) IncomingMessageNotifier(ctx context.Context, p *IncomingMessagePayload) (res string, err error) {
	var ires interface{}
	ires, err = c.IncomingMessageNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// BulkOptOutNotifier calls the "bulk_optOut_notifier" endpoint of the
// "africastalking" service.
func (c *Client) BulkOptOutNotifier(ctx context.Context, p *BulkSMSOptOutPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.BulkOptOutNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// SubNotifier calls the "sub_notifier" endpoint of the "africastalking"
// service.
func (c *Client) SubNotifier(ctx context.Context, p *SubNotificationPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.SubNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// VoiceNotifier calls the "voice_notifier" endpoint of the "africastalking"
// service.
func (c *Client) VoiceNotifier(ctx context.Context, p *VoiceNotificationPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.VoiceNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// TransferEventNotifier calls the "transfer_event_notifier" endpoint of the
// "africastalking" service.
func (c *Client) TransferEventNotifier(ctx context.Context, p *TransferEventPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.TransferEventNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// UssdNotifier calls the "ussd_notifier" endpoint of the "africastalking"
// service.
func (c *Client) UssdNotifier(ctx context.Context, p *USSDPayload) (res *USSDResponse, err error) {
	var ires interface{}
	ires, err = c.UssdNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*USSDResponse), nil
}

// ValidationNotifier calls the "validation_notifier" endpoint of the
// "africastalking" service.
func (c *Client) ValidationNotifier(ctx context.Context, p *AirtimeValidationPayload) (res *AirtimeValidationResponse, err error) {
	var ires interface{}
	ires, err = c.ValidationNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AirtimeValidationResponse), nil
}

// StatusNotifier calls the "status_notifier" endpoint of the "africastalking"
// service.
func (c *Client) StatusNotifier(ctx context.Context, p *AirtimeStatusPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.StatusNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// PaymentNotifier calls the "payment_notifier" endpoint of the
// "africastalking" service.
func (c *Client) PaymentNotifier(ctx context.Context, p *PaymentNotificationPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.PaymentNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// C2bValidationNotifier calls the "c2b_validation_notifier" endpoint of the
// "africastalking" service.
func (c *Client) C2bValidationNotifier(ctx context.Context, p *C2BValidationNotificationPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.C2bValidationNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// B2cValidationNotifier calls the "b2c_validation_notifier" endpoint of the
// "africastalking" service.
func (c *Client) B2cValidationNotifier(ctx context.Context, p *B2CValidationNotificationPayload) (res *B2CValidationNotificationResponse, err error) {
	var ires interface{}
	ires, err = c.B2cValidationNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*B2CValidationNotificationResponse), nil
}

// IotNotifier calls the "iot_notifier" endpoint of the "africastalking"
// service.
func (c *Client) IotNotifier(ctx context.Context, p *IoTNotificationPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.IotNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
