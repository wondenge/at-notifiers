// Code generated by goa v3.1.3, DO NOT EDIT.
//
// africastalking go-kit HTTP client encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package client

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/wondenge/at-notifiers/gen/http/africastalking/client"
	goahttp "goa.design/goa/v3/http"
)

// EncodeDeliveryReportNotifierRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking delivery_report_notifier requests.
func EncodeDeliveryReportNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeDeliveryReportNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeDeliveryReportNotifierResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking delivery_report_notifier responses.
func DecodeDeliveryReportNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeDeliveryReportNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeIncomingMessageNotifierRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking incoming_message_notifier requests.
func EncodeIncomingMessageNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeIncomingMessageNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeIncomingMessageNotifierResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking incoming_message_notifier responses.
func DecodeIncomingMessageNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeIncomingMessageNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeBulkOptOutNotifierRequest returns a go-kit EncodeRequestFunc suitable
// for encoding africastalking bulk_optOut_notifier requests.
func EncodeBulkOptOutNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeBulkOptOutNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeBulkOptOutNotifierResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking bulk_optOut_notifier responses.
func DecodeBulkOptOutNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeBulkOptOutNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeSubNotifierRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking sub_notifier requests.
func EncodeSubNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeSubNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeSubNotifierResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking sub_notifier responses.
func DecodeSubNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeSubNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeVoiceNotifierRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking voice_notifier requests.
func EncodeVoiceNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeVoiceNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeVoiceNotifierResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking voice_notifier responses.
func DecodeVoiceNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeVoiceNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeTransferEventNotifierRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking transfer_event_notifier requests.
func EncodeTransferEventNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeTransferEventNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeTransferEventNotifierResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking transfer_event_notifier responses.
func DecodeTransferEventNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeTransferEventNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeUssdNotifierRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking ussd_notifier requests.
func EncodeUssdNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeUssdNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeUssdNotifierResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking ussd_notifier responses.
func DecodeUssdNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeUssdNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeValidationNotifierRequest returns a go-kit EncodeRequestFunc suitable
// for encoding africastalking validation_notifier requests.
func EncodeValidationNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeValidationNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeValidationNotifierResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking validation_notifier responses.
func DecodeValidationNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeValidationNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeStatusNotifierRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking status_notifier requests.
func EncodeStatusNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeStatusNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeStatusNotifierResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking status_notifier responses.
func DecodeStatusNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeStatusNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodePaymentNotifierRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking payment_notifier requests.
func EncodePaymentNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodePaymentNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodePaymentNotifierResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking payment_notifier responses.
func DecodePaymentNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodePaymentNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeC2bValidationNotifierRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking c2b_validation_notifier requests.
func EncodeC2bValidationNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeC2bValidationNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeC2bValidationNotifierResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking c2b_validation_notifier responses.
func DecodeC2bValidationNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeC2bValidationNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeB2cValidationNotifierRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking b2c_validation_notifier requests.
func EncodeB2cValidationNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeB2cValidationNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeB2cValidationNotifierResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking b2c_validation_notifier responses.
func DecodeB2cValidationNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeB2cValidationNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeIotNotifierRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking iot_notifier requests.
func EncodeIotNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeIotNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeIotNotifierResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking iot_notifier responses.
func DecodeIotNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeIotNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}
