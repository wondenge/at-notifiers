// Code generated by goa v3.1.3, DO NOT EDIT.
//
// voice client
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package voice

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "voice" service client.
type Client struct {
	VoiceNotifierEndpoint  endpoint.Endpoint
	TransferEventsEndpoint endpoint.Endpoint
}

// NewClient initializes a "voice" service client given the endpoints.
func NewClient(voiceNotifier, transferEvents endpoint.Endpoint) *Client {
	return &Client{
		VoiceNotifierEndpoint:  voiceNotifier,
		TransferEventsEndpoint: transferEvents,
	}
}

// VoiceNotifier calls the "voiceNotifier" endpoint of the "voice" service.
func (c *Client) VoiceNotifier(ctx context.Context, p *VoiceNotification) (res string, err error) {
	var ires interface{}
	ires, err = c.VoiceNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// TransferEvents calls the "transferEvents" endpoint of the "voice" service.
func (c *Client) TransferEvents(ctx context.Context, p *CallTransferEvent) (res string, err error) {
	var ires interface{}
	ires, err = c.TransferEventsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
