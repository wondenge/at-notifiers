// Code generated by goa v3.1.3, DO NOT EDIT.
//
// airtime go-kit HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package server

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/wondenge/at-notifiers/gen/http/airtime/server"
	goahttp "goa.design/goa/v3/http"
)

// EncodeValidationResponse returns a go-kit EncodeResponseFunc suitable for
// encoding airtime validation responses.
func EncodeValidationResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeValidationResponse(encoder)
}

// DecodeValidationRequest returns a go-kit DecodeRequestFunc suitable for
// decoding airtime validation requests.
func DecodeValidationRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeValidationRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeStatusResponse returns a go-kit EncodeResponseFunc suitable for
// encoding airtime status responses.
func EncodeStatusResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeStatusResponse(encoder)
}

// DecodeStatusRequest returns a go-kit DecodeRequestFunc suitable for decoding
// airtime status requests.
func DecodeStatusRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeStatusRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}
