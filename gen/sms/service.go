// Code generated by goa v3.1.3, DO NOT EDIT.
//
// sms service
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package sms

import (
	"context"
)

// Service is the sms service interface.
type Service interface {
	// Sent whenever an MSP confirms or rejects delivery of a message.
	DeliveryReport(context.Context, *DeliveryReport1) (res string, err error)
	// Sent whenever a message is sent to any of your registered shortcodes.
	IncomingMessage(context.Context, *IncomingMessage1) (res string, err error)
	// Sent whenever a user opts out of receiving messages from your alphanumeric
	// sender ID
	BulkSMSOptOut(context.Context, *BulkSMSOptOut1) (res string, err error)
	// Sent whenever someone subscribes or unsubscribes from any of your premium
	// SMS products.
	SubNotifier(context.Context, *SubscriptionNotification) (res string, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "sms"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"deliveryReport", "incomingMessage", "bulkSMSOptOut", "subNotifier"}

// DeliveryReport1 is the payload type of the sms service deliveryReport method.
type DeliveryReport1 struct {
	// A unique identifier for each message.
	ID *string
	// The status of the message.
	Status *string
	// Mobile phone number message was sent out to.
	PhoneNumber *string
	// A unique identifier for the Telco that handled the message.
	NetworkCode *string
	// Only provided if status is Rejected or Failed.
	FailureReason *string
	// Number of times the request to send a message to the device was retried
	// before it succeeded or definitely failed.
	RetryCount *string
}

// IncomingMessage1 is the payload type of the sms service incomingMessage
// method.
type IncomingMessage1 struct {
	// The date and time when the message was received.
	Date *string
	// The number that sent the message.
	From *string
	// The internal ID that we use to store this message.
	ID *string
	// Parameter required when responding to an on-demand user request with a
	// premium message.
	LinkID *string
	// The message content.
	Text *string
	// The number to which the message was sent.
	To *string
	// A unique identifier for the telco that handled the message.
	NetworkCode *string
}

// BulkSMSOptOut1 is the payload type of the sms service bulkSMSOptOut method.
type BulkSMSOptOut1 struct {
	// Shortcode/Alphanumeric Sender ID the user opted out from.
	SenderID *string
	// Mobile phone number of the subscriber who opted out.
	PhoneNumber *string
}

// SubscriptionNotification is the payload type of the sms service subNotifier
// method.
type SubscriptionNotification struct {
	// Mobile phone number to subscribe or unsubscribe.
	PhoneNumber *string
	// The short code that has this product.
	ShortCode *string
	// The product keyword that the user has subscribed or unsubscribed from.
	Keyword *string
	// The type of the update.
	UpdateType *string
}
