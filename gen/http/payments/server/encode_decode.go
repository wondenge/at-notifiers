// Code generated by goa v3.1.3, DO NOT EDIT.
//
// payments HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package server

import (
	"context"
	"io"
	"net/http"

	payments "github.com/wondenge/at-notifiers/gen/payments"
	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// EncodePaymentNotifierResponse returns an encoder for responses returned by
// the payments paymentNotifier endpoint.
func EncodePaymentNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res := v.(string)
		enc := encoder(ctx, w)
		body := res
		w.WriteHeader(http.StatusCreated)
		return enc.Encode(body)
	}
}

// DecodePaymentNotifierRequest returns a decoder for requests sent to the
// payments paymentNotifier endpoint.
func DecodePaymentNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			body PaymentNotifierRequestBody
			err  error
		)
		err = decoder(r).Decode(&body)
		if err != nil {
			if err == io.EOF {
				return nil, goa.MissingPayloadError()
			}
			return nil, goa.DecodePayloadError(err.Error())
		}
		err = ValidatePaymentNotifierRequestBody(&body)
		if err != nil {
			return nil, err
		}
		payload := NewPaymentNotifierPaymentNotification(&body)

		return payload, nil
	}
}

// EncodeC2bNotifierResponse returns an encoder for responses returned by the
// payments c2bNotifier endpoint.
func EncodeC2bNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res := v.(string)
		enc := encoder(ctx, w)
		body := res
		w.WriteHeader(http.StatusCreated)
		return enc.Encode(body)
	}
}

// DecodeC2bNotifierRequest returns a decoder for requests sent to the payments
// c2bNotifier endpoint.
func DecodeC2bNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			body C2bNotifierRequestBody
			err  error
		)
		err = decoder(r).Decode(&body)
		if err != nil {
			if err == io.EOF {
				return nil, goa.MissingPayloadError()
			}
			return nil, goa.DecodePayloadError(err.Error())
		}
		err = ValidateC2bNotifierRequestBody(&body)
		if err != nil {
			return nil, err
		}
		payload := NewC2bNotifierC2BValidationNotification(&body)

		return payload, nil
	}
}

// EncodeB2cNotifierResponse returns an encoder for responses returned by the
// payments b2cNotifier endpoint.
func EncodeB2cNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res := v.(*payments.B2CValidationNotificationResponse)
		enc := encoder(ctx, w)
		body := NewB2cNotifierResponseBody(res)
		w.WriteHeader(http.StatusCreated)
		return enc.Encode(body)
	}
}

// DecodeB2cNotifierRequest returns a decoder for requests sent to the payments
// b2cNotifier endpoint.
func DecodeB2cNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			body B2cNotifierRequestBody
			err  error
		)
		err = decoder(r).Decode(&body)
		if err != nil {
			if err == io.EOF {
				return nil, goa.MissingPayloadError()
			}
			return nil, goa.DecodePayloadError(err.Error())
		}
		payload := NewB2cNotifierB2CValidationNotificationPayload(&body)

		return payload, nil
	}
}
