// Code generated by goa v3.1.3, DO NOT EDIT.
//
// africastalking go-kit HTTP client encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package client

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/wondenge/at-notifiers/gen/http/africastalking/client"
	goahttp "goa.design/goa/v3/http"
)

// EncodeSmsDeliveryReportRequest returns a go-kit EncodeRequestFunc suitable
// for encoding africastalking sms_delivery_report requests.
func EncodeSmsDeliveryReportRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeSmsDeliveryReportRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeSmsDeliveryReportResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking sms_delivery_report responses.
func DecodeSmsDeliveryReportResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeSmsDeliveryReportResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeSmsIncomingMessageRequest returns a go-kit EncodeRequestFunc suitable
// for encoding africastalking sms_incoming_message requests.
func EncodeSmsIncomingMessageRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeSmsIncomingMessageRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeSmsIncomingMessageResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking sms_incoming_message responses.
func DecodeSmsIncomingMessageResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeSmsIncomingMessageResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeSmsBulkOptoutRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking sms_bulk_optout requests.
func EncodeSmsBulkOptoutRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeSmsBulkOptoutRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeSmsBulkOptoutResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking sms_bulk_optout responses.
func DecodeSmsBulkOptoutResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeSmsBulkOptoutResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeSmsSubscriptionRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking sms_subscription requests.
func EncodeSmsSubscriptionRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeSmsSubscriptionRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeSmsSubscriptionResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking sms_subscription responses.
func DecodeSmsSubscriptionResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeSmsSubscriptionResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeVoiceNotificationRequest returns a go-kit EncodeRequestFunc suitable
// for encoding africastalking voice_notification requests.
func EncodeVoiceNotificationRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeVoiceNotificationRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeVoiceNotificationResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking voice_notification responses.
func DecodeVoiceNotificationResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeVoiceNotificationResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeTransferEventRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking transfer_event requests.
func EncodeTransferEventRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeTransferEventRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeTransferEventResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking transfer_event responses.
func DecodeTransferEventResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeTransferEventResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeUssdNotifierRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking ussd_notifier requests.
func EncodeUssdNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeUssdNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeUssdNotifierResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking ussd_notifier responses.
func DecodeUssdNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeUssdNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeValidationNotifierRequest returns a go-kit EncodeRequestFunc suitable
// for encoding africastalking validation_notifier requests.
func EncodeValidationNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeValidationNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeValidationNotifierResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking validation_notifier responses.
func DecodeValidationNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeValidationNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeStatusNotifierRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking status_notifier requests.
func EncodeStatusNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeStatusNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeStatusNotifierResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking status_notifier responses.
func DecodeStatusNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeStatusNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodePaymentNotifierRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking payment_notifier requests.
func EncodePaymentNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodePaymentNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodePaymentNotifierResponse returns a go-kit DecodeResponseFunc suitable
// for decoding africastalking payment_notifier responses.
func DecodePaymentNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodePaymentNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeC2bValidationNotifierRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking c2b_validation_notifier requests.
func EncodeC2bValidationNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeC2bValidationNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeC2bValidationNotifierResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking c2b_validation_notifier responses.
func DecodeC2bValidationNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeC2bValidationNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeB2cValidationNotifierRequest returns a go-kit EncodeRequestFunc
// suitable for encoding africastalking b2c_validation_notifier requests.
func EncodeB2cValidationNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeB2cValidationNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeB2cValidationNotifierResponse returns a go-kit DecodeResponseFunc
// suitable for decoding africastalking b2c_validation_notifier responses.
func DecodeB2cValidationNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeB2cValidationNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeIotNotifierRequest returns a go-kit EncodeRequestFunc suitable for
// encoding africastalking iot_notifier requests.
func EncodeIotNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeIotNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeIotNotifierResponse returns a go-kit DecodeResponseFunc suitable for
// decoding africastalking iot_notifier responses.
func DecodeIotNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeIotNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}
