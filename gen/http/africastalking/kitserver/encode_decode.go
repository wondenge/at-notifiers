// Code generated by goa v3.1.3, DO NOT EDIT.
//
// africastalking go-kit HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package server

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/wondenge/at-notifiers/gen/http/africastalking/server"
	goahttp "goa.design/goa/v3/http"
)

// EncodeDeliveryReportNotifierResponse returns a go-kit EncodeResponseFunc
// suitable for encoding africastalking delivery_report_notifier responses.
func EncodeDeliveryReportNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeDeliveryReportNotifierResponse(encoder)
}

// DecodeDeliveryReportNotifierRequest returns a go-kit DecodeRequestFunc
// suitable for decoding africastalking delivery_report_notifier requests.
func DecodeDeliveryReportNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeDeliveryReportNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeIncomingMessageNotifierResponse returns a go-kit EncodeResponseFunc
// suitable for encoding africastalking incoming_message_notifier responses.
func EncodeIncomingMessageNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeIncomingMessageNotifierResponse(encoder)
}

// DecodeIncomingMessageNotifierRequest returns a go-kit DecodeRequestFunc
// suitable for decoding africastalking incoming_message_notifier requests.
func DecodeIncomingMessageNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeIncomingMessageNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeBulkOptOutNotifierResponse returns a go-kit EncodeResponseFunc
// suitable for encoding africastalking bulk_optOut_notifier responses.
func EncodeBulkOptOutNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeBulkOptOutNotifierResponse(encoder)
}

// DecodeBulkOptOutNotifierRequest returns a go-kit DecodeRequestFunc suitable
// for decoding africastalking bulk_optOut_notifier requests.
func DecodeBulkOptOutNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeBulkOptOutNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeSubNotifierResponse returns a go-kit EncodeResponseFunc suitable for
// encoding africastalking sub_notifier responses.
func EncodeSubNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeSubNotifierResponse(encoder)
}

// DecodeSubNotifierRequest returns a go-kit DecodeRequestFunc suitable for
// decoding africastalking sub_notifier requests.
func DecodeSubNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeSubNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeVoiceNotifierResponse returns a go-kit EncodeResponseFunc suitable for
// encoding africastalking voice_notifier responses.
func EncodeVoiceNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeVoiceNotifierResponse(encoder)
}

// DecodeVoiceNotifierRequest returns a go-kit DecodeRequestFunc suitable for
// decoding africastalking voice_notifier requests.
func DecodeVoiceNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeVoiceNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeTransferEventNotifierResponse returns a go-kit EncodeResponseFunc
// suitable for encoding africastalking transfer_event_notifier responses.
func EncodeTransferEventNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeTransferEventNotifierResponse(encoder)
}

// DecodeTransferEventNotifierRequest returns a go-kit DecodeRequestFunc
// suitable for decoding africastalking transfer_event_notifier requests.
func DecodeTransferEventNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeTransferEventNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeUssdNotifierResponse returns a go-kit EncodeResponseFunc suitable for
// encoding africastalking ussd_notifier responses.
func EncodeUssdNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeUssdNotifierResponse(encoder)
}

// DecodeUssdNotifierRequest returns a go-kit DecodeRequestFunc suitable for
// decoding africastalking ussd_notifier requests.
func DecodeUssdNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeUssdNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeValidationNotifierResponse returns a go-kit EncodeResponseFunc
// suitable for encoding africastalking validation_notifier responses.
func EncodeValidationNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeValidationNotifierResponse(encoder)
}

// DecodeValidationNotifierRequest returns a go-kit DecodeRequestFunc suitable
// for decoding africastalking validation_notifier requests.
func DecodeValidationNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeValidationNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeStatusNotifierResponse returns a go-kit EncodeResponseFunc suitable
// for encoding africastalking status_notifier responses.
func EncodeStatusNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeStatusNotifierResponse(encoder)
}

// DecodeStatusNotifierRequest returns a go-kit DecodeRequestFunc suitable for
// decoding africastalking status_notifier requests.
func DecodeStatusNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeStatusNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodePaymentNotifierResponse returns a go-kit EncodeResponseFunc suitable
// for encoding africastalking payment_notifier responses.
func EncodePaymentNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodePaymentNotifierResponse(encoder)
}

// DecodePaymentNotifierRequest returns a go-kit DecodeRequestFunc suitable for
// decoding africastalking payment_notifier requests.
func DecodePaymentNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodePaymentNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeC2bValidationNotifierResponse returns a go-kit EncodeResponseFunc
// suitable for encoding africastalking c2b_validation_notifier responses.
func EncodeC2bValidationNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeC2bValidationNotifierResponse(encoder)
}

// DecodeC2bValidationNotifierRequest returns a go-kit DecodeRequestFunc
// suitable for decoding africastalking c2b_validation_notifier requests.
func DecodeC2bValidationNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeC2bValidationNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeB2cValidationNotifierResponse returns a go-kit EncodeResponseFunc
// suitable for encoding africastalking b2c_validation_notifier responses.
func EncodeB2cValidationNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeB2cValidationNotifierResponse(encoder)
}

// DecodeB2cValidationNotifierRequest returns a go-kit DecodeRequestFunc
// suitable for decoding africastalking b2c_validation_notifier requests.
func DecodeB2cValidationNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeB2cValidationNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeIotNotifierResponse returns a go-kit EncodeResponseFunc suitable for
// encoding africastalking iot_notifier responses.
func EncodeIotNotifierResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeIotNotifierResponse(encoder)
}

// DecodeIotNotifierRequest returns a go-kit DecodeRequestFunc suitable for
// decoding africastalking iot_notifier requests.
func DecodeIotNotifierRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeIotNotifierRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}
