// Code generated by goa v3.1.3, DO NOT EDIT.
//
// sms go-kit HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package server

import (
	"net/http"

	goahttp "goa.design/goa/v3/http"
)

// MountDeliveryReportHandler configures the mux to serve the "sms" service
// "deliveryReport" endpoint.
func MountDeliveryReportHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("POST", "/callbacks/africastalking/sms/deliveryreport", f)
}

// MountIncomingMessageHandler configures the mux to serve the "sms" service
// "incomingMessage" endpoint.
func MountIncomingMessageHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("POST", "/callbacks/africastalking/sms/incomingmessage", f)
}

// MountBulkSMSOptOutHandler configures the mux to serve the "sms" service
// "bulkSMSOptOut" endpoint.
func MountBulkSMSOptOutHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("POST", "/callbacks/africastalking/sms/bulksmsoptout", f)
}

// MountSubNotifierHandler configures the mux to serve the "sms" service
// "subNotifier" endpoint.
func MountSubNotifierHandler(mux goahttp.Muxer, h http.Handler) {
	f, ok := h.(http.HandlerFunc)
	if !ok {
		f = func(w http.ResponseWriter, r *http.Request) {
			h.ServeHTTP(w, r)
		}
	}
	mux.Handle("POST", "/callbacks/africastalking/sms/subscription", f)
}
