// Code generated by goa v3.1.3, DO NOT EDIT.
//
// airtime client
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package airtime

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "airtime" service client.
type Client struct {
	ValidationEndpoint endpoint.Endpoint
	StatusEndpoint     endpoint.Endpoint
}

// NewClient initializes a "airtime" service client given the endpoints.
func NewClient(validation, status endpoint.Endpoint) *Client {
	return &Client{
		ValidationEndpoint: validation,
		StatusEndpoint:     status,
	}
}

// Validation calls the "validation" endpoint of the "airtime" service.
func (c *Client) Validation(ctx context.Context, p *AirtimeValidationPayload) (res *AirtimeValidationResponse, err error) {
	var ires interface{}
	ires, err = c.ValidationEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AirtimeValidationResponse), nil
}

// Status calls the "status" endpoint of the "airtime" service.
func (c *Client) Status(ctx context.Context, p *AirtimeStatus) (res string, err error) {
	var ires interface{}
	ires, err = c.StatusEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
