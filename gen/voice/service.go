// Code generated by goa v3.1.3, DO NOT EDIT.
//
// voice service
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package voice

import (
	"context"
)

// Service is the voice service interface.
type Service interface {
	// Voice Notification delivered to our callback URL
	VoiceNotifier(context.Context, *VoiceNotification) (res string, err error)
	// Event Notifications sent from AT after call transfer initiated.
	TransferEvents(context.Context, *CallTransferEvent) (res string, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "voice"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"voiceNotifier", "transferEvents"}

// VoiceNotification is the payload type of the voice service voiceNotifier
// method.
type VoiceNotification struct {
	// Lets us know whether the call is in session state
	IsActive string
	// A unique identifier generated during each call session
	SessionID *string
	// Whether this is an inbound or outbound call
	Direction *string
	// Africaâ€™s Talking phone number, in international format
	DestinationNumber *string
	// The phone number of the phone user in the call, in international format.
	CallerNumber *string
	// The code of the country the callerNumber is calling from.
	CallerCountryCode *string
	// The time the call began.
	CallStartTime *string
	// The digits that a user enters in response to a getDigits request
	DtmfDigits *string
	// The URL of the recording made for this call
	RecordingURL *string
	// The duration of the call in seconds.
	DurationInSeconds *string
	// The currency used to bill this call (e.g KES, USD, GBP).
	CurrencyCode *string
	// The total cost of the call.
	Amount *string
	// The final status of the call.
	CallSessionState *string
	// The number which a call was forwarded to if the Dial action was used.
	DialDestinationNumber *string
	// The duration of the dialed call if the Dial action was used.
	DialDurationInSeconds *string
	// The time the dial action began if the Dial action was used.
	DialStartTime *string
	// The reason a call could have ended
	HangupCause *string
}

// CallTransferEvent is the payload type of the voice service transferEvents
// method.
type CallTransferEvent struct {
	CallSessionState *string
	IsActive         string
	Status           *string
	// +2347XXXXXXXXX:20, (20 is the duration in seconds)
	CallTransferParam *string
	// Number call was transferred to
	CallTransferredToNumber *string
	CallTransferState       *string
	CallTransferHangupCause *string
}
