// Code generated by goa v3.1.3, DO NOT EDIT.
//
// at HTTP client CLI support package
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package cli

import (
	"flag"
	"fmt"
	"net/http"
	"os"

	"github.com/go-kit/kit/endpoint"
	africastalkingc "github.com/wondenge/at-notifiers/gen/http/africastalking/client"
	healthc "github.com/wondenge/at-notifiers/gen/http/health/client"
	goahttp "goa.design/goa/v3/http"
)

// UsageCommands returns the set of commands and sub-commands using the format
//
//    command (subcommand1|subcommand2|...)
//
func UsageCommands() string {
	return `health show
africastalking (sms-delivery-report|sms-incoming-message|sms-bulk-optout|sms-subscription|voice-notification|transfer-event|ussd-notifier|validation-notifier|status-notifier|payment-notifier|c2b-validation-notifier|b2c-validation-notifier|iot-notifier)
`
}

// UsageExamples produces an example of a valid invocation of the CLI tool.
func UsageExamples() string {
	return os.Args[0] + ` health show` + "\n" +
		os.Args[0] + ` africastalking sms-delivery-report --body '{
      "failureReason": "UserAccountSuspended",
      "id": "Exercitationem earum et id inventore voluptatem odit.",
      "networkCode": "65001",
      "phoneNumber": "Eos quam.",
      "retryCount": "Sed harum sapiente sed quis.",
      "status": "Failed"
   }'` + "\n" +
		""
}

// ParseEndpoint returns the endpoint and payload as specified on the command
// line.
func ParseEndpoint(
	scheme, host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restore bool,
) (endpoint.Endpoint, interface{}, error) {
	var (
		healthFlags = flag.NewFlagSet("health", flag.ContinueOnError)

		healthShowFlags = flag.NewFlagSet("show", flag.ExitOnError)

		africastalkingFlags = flag.NewFlagSet("africastalking", flag.ContinueOnError)

		africastalkingSmsDeliveryReportFlags    = flag.NewFlagSet("sms-delivery-report", flag.ExitOnError)
		africastalkingSmsDeliveryReportBodyFlag = africastalkingSmsDeliveryReportFlags.String("body", "REQUIRED", "")

		africastalkingSmsIncomingMessageFlags    = flag.NewFlagSet("sms-incoming-message", flag.ExitOnError)
		africastalkingSmsIncomingMessageBodyFlag = africastalkingSmsIncomingMessageFlags.String("body", "REQUIRED", "")

		africastalkingSmsBulkOptoutFlags    = flag.NewFlagSet("sms-bulk-optout", flag.ExitOnError)
		africastalkingSmsBulkOptoutBodyFlag = africastalkingSmsBulkOptoutFlags.String("body", "REQUIRED", "")

		africastalkingSmsSubscriptionFlags    = flag.NewFlagSet("sms-subscription", flag.ExitOnError)
		africastalkingSmsSubscriptionBodyFlag = africastalkingSmsSubscriptionFlags.String("body", "REQUIRED", "")

		africastalkingVoiceNotificationFlags    = flag.NewFlagSet("voice-notification", flag.ExitOnError)
		africastalkingVoiceNotificationBodyFlag = africastalkingVoiceNotificationFlags.String("body", "REQUIRED", "")

		africastalkingTransferEventFlags    = flag.NewFlagSet("transfer-event", flag.ExitOnError)
		africastalkingTransferEventBodyFlag = africastalkingTransferEventFlags.String("body", "REQUIRED", "")

		africastalkingUssdNotifierFlags    = flag.NewFlagSet("ussd-notifier", flag.ExitOnError)
		africastalkingUssdNotifierBodyFlag = africastalkingUssdNotifierFlags.String("body", "REQUIRED", "")

		africastalkingValidationNotifierFlags    = flag.NewFlagSet("validation-notifier", flag.ExitOnError)
		africastalkingValidationNotifierBodyFlag = africastalkingValidationNotifierFlags.String("body", "REQUIRED", "")

		africastalkingStatusNotifierFlags    = flag.NewFlagSet("status-notifier", flag.ExitOnError)
		africastalkingStatusNotifierBodyFlag = africastalkingStatusNotifierFlags.String("body", "REQUIRED", "")

		africastalkingPaymentNotifierFlags    = flag.NewFlagSet("payment-notifier", flag.ExitOnError)
		africastalkingPaymentNotifierBodyFlag = africastalkingPaymentNotifierFlags.String("body", "REQUIRED", "")

		africastalkingC2bValidationNotifierFlags    = flag.NewFlagSet("c2b-validation-notifier", flag.ExitOnError)
		africastalkingC2bValidationNotifierBodyFlag = africastalkingC2bValidationNotifierFlags.String("body", "REQUIRED", "")

		africastalkingB2cValidationNotifierFlags    = flag.NewFlagSet("b2c-validation-notifier", flag.ExitOnError)
		africastalkingB2cValidationNotifierBodyFlag = africastalkingB2cValidationNotifierFlags.String("body", "REQUIRED", "")

		africastalkingIotNotifierFlags    = flag.NewFlagSet("iot-notifier", flag.ExitOnError)
		africastalkingIotNotifierBodyFlag = africastalkingIotNotifierFlags.String("body", "REQUIRED", "")
	)
	healthFlags.Usage = healthUsage
	healthShowFlags.Usage = healthShowUsage

	africastalkingFlags.Usage = africastalkingUsage
	africastalkingSmsDeliveryReportFlags.Usage = africastalkingSmsDeliveryReportUsage
	africastalkingSmsIncomingMessageFlags.Usage = africastalkingSmsIncomingMessageUsage
	africastalkingSmsBulkOptoutFlags.Usage = africastalkingSmsBulkOptoutUsage
	africastalkingSmsSubscriptionFlags.Usage = africastalkingSmsSubscriptionUsage
	africastalkingVoiceNotificationFlags.Usage = africastalkingVoiceNotificationUsage
	africastalkingTransferEventFlags.Usage = africastalkingTransferEventUsage
	africastalkingUssdNotifierFlags.Usage = africastalkingUssdNotifierUsage
	africastalkingValidationNotifierFlags.Usage = africastalkingValidationNotifierUsage
	africastalkingStatusNotifierFlags.Usage = africastalkingStatusNotifierUsage
	africastalkingPaymentNotifierFlags.Usage = africastalkingPaymentNotifierUsage
	africastalkingC2bValidationNotifierFlags.Usage = africastalkingC2bValidationNotifierUsage
	africastalkingB2cValidationNotifierFlags.Usage = africastalkingB2cValidationNotifierUsage
	africastalkingIotNotifierFlags.Usage = africastalkingIotNotifierUsage

	if err := flag.CommandLine.Parse(os.Args[1:]); err != nil {
		return nil, nil, err
	}

	if flag.NArg() < 2 { // two non flag args are required: SERVICE and ENDPOINT (aka COMMAND)
		return nil, nil, fmt.Errorf("not enough arguments")
	}

	var (
		svcn string
		svcf *flag.FlagSet
	)
	{
		svcn = flag.Arg(0)
		switch svcn {
		case "health":
			svcf = healthFlags
		case "africastalking":
			svcf = africastalkingFlags
		default:
			return nil, nil, fmt.Errorf("unknown service %q", svcn)
		}
	}
	if err := svcf.Parse(flag.Args()[1:]); err != nil {
		return nil, nil, err
	}

	var (
		epn string
		epf *flag.FlagSet
	)
	{
		epn = svcf.Arg(0)
		switch svcn {
		case "health":
			switch epn {
			case "show":
				epf = healthShowFlags

			}

		case "africastalking":
			switch epn {
			case "sms-delivery-report":
				epf = africastalkingSmsDeliveryReportFlags

			case "sms-incoming-message":
				epf = africastalkingSmsIncomingMessageFlags

			case "sms-bulk-optout":
				epf = africastalkingSmsBulkOptoutFlags

			case "sms-subscription":
				epf = africastalkingSmsSubscriptionFlags

			case "voice-notification":
				epf = africastalkingVoiceNotificationFlags

			case "transfer-event":
				epf = africastalkingTransferEventFlags

			case "ussd-notifier":
				epf = africastalkingUssdNotifierFlags

			case "validation-notifier":
				epf = africastalkingValidationNotifierFlags

			case "status-notifier":
				epf = africastalkingStatusNotifierFlags

			case "payment-notifier":
				epf = africastalkingPaymentNotifierFlags

			case "c2b-validation-notifier":
				epf = africastalkingC2bValidationNotifierFlags

			case "b2c-validation-notifier":
				epf = africastalkingB2cValidationNotifierFlags

			case "iot-notifier":
				epf = africastalkingIotNotifierFlags

			}

		}
	}
	if epf == nil {
		return nil, nil, fmt.Errorf("unknown %q endpoint %q", svcn, epn)
	}

	// Parse endpoint flags if any
	if svcf.NArg() > 1 {
		if err := epf.Parse(svcf.Args()[1:]); err != nil {
			return nil, nil, err
		}
	}

	var (
		data     interface{}
		endpoint endpoint.Endpoint
		err      error
	)
	{
		switch svcn {
		case "health":
			c := healthc.NewClient(scheme, host, doer, enc, dec, restore)
			switch epn {
			case "show":
				endpoint = c.Show()
				data = nil
			}
		case "africastalking":
			c := africastalkingc.NewClient(scheme, host, doer, enc, dec, restore)
			switch epn {
			case "sms-delivery-report":
				endpoint = c.SmsDeliveryReport()
				data, err = africastalkingc.BuildSmsDeliveryReportPayload(*africastalkingSmsDeliveryReportBodyFlag)
			case "sms-incoming-message":
				endpoint = c.SmsIncomingMessage()
				data, err = africastalkingc.BuildSmsIncomingMessagePayload(*africastalkingSmsIncomingMessageBodyFlag)
			case "sms-bulk-optout":
				endpoint = c.SmsBulkOptout()
				data, err = africastalkingc.BuildSmsBulkOptoutPayload(*africastalkingSmsBulkOptoutBodyFlag)
			case "sms-subscription":
				endpoint = c.SmsSubscription()
				data, err = africastalkingc.BuildSmsSubscriptionPayload(*africastalkingSmsSubscriptionBodyFlag)
			case "voice-notification":
				endpoint = c.VoiceNotification()
				data, err = africastalkingc.BuildVoiceNotificationPayload(*africastalkingVoiceNotificationBodyFlag)
			case "transfer-event":
				endpoint = c.TransferEvent()
				data, err = africastalkingc.BuildTransferEventPayload(*africastalkingTransferEventBodyFlag)
			case "ussd-notifier":
				endpoint = c.UssdNotifier()
				data, err = africastalkingc.BuildUssdNotifierPayload(*africastalkingUssdNotifierBodyFlag)
			case "validation-notifier":
				endpoint = c.ValidationNotifier()
				data, err = africastalkingc.BuildValidationNotifierPayload(*africastalkingValidationNotifierBodyFlag)
			case "status-notifier":
				endpoint = c.StatusNotifier()
				data, err = africastalkingc.BuildStatusNotifierPayload(*africastalkingStatusNotifierBodyFlag)
			case "payment-notifier":
				endpoint = c.PaymentNotifier()
				data, err = africastalkingc.BuildPaymentNotifierPayload(*africastalkingPaymentNotifierBodyFlag)
			case "c2b-validation-notifier":
				endpoint = c.C2bValidationNotifier()
				data, err = africastalkingc.BuildC2bValidationNotifierPayload(*africastalkingC2bValidationNotifierBodyFlag)
			case "b2c-validation-notifier":
				endpoint = c.B2cValidationNotifier()
				data, err = africastalkingc.BuildB2cValidationNotifierPayload(*africastalkingB2cValidationNotifierBodyFlag)
			case "iot-notifier":
				endpoint = c.IotNotifier()
				data, err = africastalkingc.BuildIotNotifierPayload(*africastalkingIotNotifierBodyFlag)
			}
		}
	}
	if err != nil {
		return nil, nil, err
	}

	return endpoint, data, nil
}

// healthUsage displays the usage of the health command and its subcommands.
func healthUsage() {
	fmt.Fprintf(os.Stderr, `Service is the health service interface.
Usage:
    %s [globalflags] health COMMAND [flags]

COMMAND:
    show: Health check endpoint.

Additional help:
    %s health COMMAND --help
`, os.Args[0], os.Args[0])
}
func healthShowUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] health show

Health check endpoint.

Example:
    `+os.Args[0]+` health show
`, os.Args[0])
}

// africastalkingUsage displays the usage of the africastalking command and its
// subcommands.
func africastalkingUsage() {
	fmt.Fprintf(os.Stderr, `Service is the africastalking service interface.
Usage:
    %s [globalflags] africastalking COMMAND [flags]

COMMAND:
    sms-delivery-report: Adds new SMS Delivery Report to our callback URL and return its ID.
    sms-incoming-message: Adds new SMS Incoming Message to our callback URL and return its ID.
    sms-bulk-optout: Adds new SMS Bulk OptOut to our callback URL and return its ID.
    sms-subscription: Adds new SMS subscription to our callback URL and return its ID.
    voice-notification: Adds new Voice Notification to our callback URL and return its ID.
    transfer-event: Adds new Event Notification to our callback URL and return its ID.
    ussd-notifier: Adds new USSD Notification to our callback URL and return its ID.
    validation-notifier: Adds new Airtime Validation Notification to our callback URL and return its ID.
    status-notifier: Adds new Airtime Status Notification to our callback URL and return its ID.
    payment-notifier: Adds new Payment Notification to our callback URL and return its ID.
    c2b-validation-notifier: Adds new C2B Validation Notification to our callback URL and return its ID.
    b2c-validation-notifier: Adds new B2C Validation Notification to our callback URL and return its ID.
    iot-notifier: Adds new IoT Notification to our callback URL and return its ID.

Additional help:
    %s africastalking COMMAND --help
`, os.Args[0], os.Args[0])
}
func africastalkingSmsDeliveryReportUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking sms-delivery-report -body JSON

Adds new SMS Delivery Report to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking sms-delivery-report --body '{
      "failureReason": "UserAccountSuspended",
      "id": "Exercitationem earum et id inventore voluptatem odit.",
      "networkCode": "65001",
      "phoneNumber": "Eos quam.",
      "retryCount": "Sed harum sapiente sed quis.",
      "status": "Failed"
   }'
`, os.Args[0])
}

func africastalkingSmsIncomingMessageUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking sms-incoming-message -body JSON

Adds new SMS Incoming Message to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking sms-incoming-message --body '{
      "date": "1997-09-28",
      "from": "Enim voluptatem.",
      "id": "Qui ullam optio.",
      "linkId": "Ducimus dolores ipsum ut rerum saepe.",
      "networkCode": "63907",
      "text": "Distinctio ut omnis omnis deserunt.",
      "to": "Vitae quaerat voluptas."
   }'
`, os.Args[0])
}

func africastalkingSmsBulkOptoutUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking sms-bulk-optout -body JSON

Adds new SMS Bulk OptOut to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking sms-bulk-optout --body '{
      "phoneNumber": "Tenetur sunt quam.",
      "senderId": "Tempora impedit accusantium eveniet maiores occaecati."
   }'
`, os.Args[0])
}

func africastalkingSmsSubscriptionUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking sms-subscription -body JSON

Adds new SMS subscription to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking sms-subscription --body '{
      "keyword": "Non et pariatur non cumque velit laborum.",
      "phoneNumber": "Aut quasi quis animi culpa natus.",
      "shortCode": "Quo eos porro tempore voluptatum voluptatum qui.",
      "updateType": "deletion"
   }'
`, os.Args[0])
}

func africastalkingVoiceNotificationUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking voice-notification -body JSON

Adds new Voice Notification to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking voice-notification --body '{
      "amount": "Itaque atque sed molestias molestiae ea praesentium.",
      "callSessionState": "Totam odit dolorem qui dolor eos.",
      "callStartTime": "Et temporibus nisi nobis corrupti tempora.",
      "callerCountryCode": "Qui quis a id sapiente quia nam.",
      "callerNumber": "+254711XXXYYY",
      "currencyCode": "Quis inventore eius.",
      "destinationNumber": "+254711XXXYYY",
      "dialDestinationNumber": "Ducimus voluptas adipisci optio.",
      "dialDurationInSeconds": "Iure est deleniti praesentium fugit quo.",
      "dialStartTime": "Et voluptatibus necessitatibus quo animi.",
      "direction": "Ut consequatur.",
      "dtmfDigits": "Atque culpa ducimus dolorem et minus aliquid.",
      "durationInSeconds": "Explicabo blanditiis consectetur eligendi ut.",
      "hangupCause": "USER_NOT_REGISTERED",
      "isActive": "Nobis distinctio.",
      "recordingUrl": "Voluptas occaecati est ad aspernatur iste qui.",
      "sessionId": "At at non laborum eius id."
   }'
`, os.Args[0])
}

func africastalkingTransferEventUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking transfer-event -body JSON

Adds new Event Notification to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking transfer-event --body '{
      "callSessionState": "Transferred",
      "callTransferHangupCause": "NotAllowed",
      "callTransferParam": "Doloremque reiciendis iusto eligendi repellat.",
      "callTransferState": " Active",
      "callTransferredToNumber": "Sunt praesentium et repellat.",
      "isActive": "1",
      "status": "Success"
   }'
`, os.Args[0])
}

func africastalkingUssdNotifierUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking ussd-notifier -body JSON

Adds new USSD Notification to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking ussd-notifier --body '{
      "networkCode": "Fugit molestias voluptatibus.",
      "phoneNumber": "Ut et quaerat voluptatum.",
      "serviceCode": "Velit odio nemo.",
      "sessionId": "Sunt maiores vero repudiandae similique quos in.",
      "text": "Harum neque quas fuga."
   }'
`, os.Args[0])
}

func africastalkingValidationNotifierUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking validation-notifier -body JSON

Adds new Airtime Validation Notification to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking validation-notifier --body '{
      "amount": 500,
      "currencyCode": "KES",
      "phoneNumber": "+254711XXXYYY",
      "transactionId": "SomeTransactionID"
   }'
`, os.Args[0])
}

func africastalkingStatusNotifierUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking status-notifier -body JSON

Adds new Airtime Status Notification to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking status-notifier --body '{
      "requestId": "ATQid_SampleTxnId123",
      "status": "Success"
   }'
`, os.Args[0])
}

func africastalkingPaymentNotifierUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking payment-notifier -body JSON

Adds new Payment Notification to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking payment-notifier --body '{
      "category": "UserStashTopup",
      "clientAccount": "Labore consequatur amet corporis.",
      "description": "Qui aut qui ipsum.",
      "destination": "Nisi incidunt at harum nobis autem.",
      "destinationType": "BankAccount",
      "productName": "Nesciunt nihil quae libero explicabo.",
      "provider": "Admin",
      "providerChannel": "Nihil nulla facere neque.",
      "providerFee": "Nihil recusandae molestiae molestiae laborum consequatur eligendi.",
      "providerMetadata": "Qui magnam rerum illum soluta voluptas aut.",
      "providerRefId": "Totam omnis.",
      "requestMetadata": "Reprehenderit repudiandae consequatur sit.",
      "source": "Qui voluptatibus ad aut veniam sed.",
      "sourceType": "BankAccount",
      "status": "Failed",
      "transactionDate": "Veritatis dicta.",
      "transactionFee": "Quia a et unde dolorem labore.",
      "transactionId": "Assumenda ipsum omnis.",
      "value": "Tempore voluptas est maiores."
   }'
`, os.Args[0])
}

func africastalkingC2bValidationNotifierUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking c2b-validation-notifier -body JSON

Adds new C2B Validation Notification to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking c2b-validation-notifier --body '{
      "clientAccount": "Et veritatis.",
      "phoneNumber": "Repellat eos ut quo ut ex sunt.",
      "productName": "Magni reprehenderit sunt.",
      "provider": "TigoTanzania",
      "providerMetadata": {
         "Magni voluptas dolorem consequatur repellendus sed reiciendis.": "Quo quia perspiciatis deleniti voluptate et.",
         "Maxime voluptate aspernatur sequi ut nostrum officiis.": "Non molestiae aliquid dicta sint non repudiandae."
      },
      "value": "Delectus perferendis omnis veniam."
   }'
`, os.Args[0])
}

func africastalkingB2cValidationNotifierUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking b2c-validation-notifier -body JSON

Adds new B2C Validation Notification to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking b2c-validation-notifier --body '{
      "amount": 500,
      "currencyCode": "KES",
      "metadata": {
         "Nobis voluptas.": "Quia autem."
      },
      "phoneNumber": "+254711XXXYYY",
      "sourceIpAddress": "12.34.56.78",
      "transactionId": "SomeTransactionID"
   }'
`, os.Args[0])
}

func africastalkingIotNotifierUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] africastalking iot-notifier -body JSON

Adds new IoT Notification to our callback URL and return its ID.
    -body JSON: 

Example:
    `+os.Args[0]+` africastalking iot-notifier --body '{
      "payload": "42",
      "topic": "myusername/devicegroup/sensor/id/1/temperature"
   }'
`, os.Args[0])
}
