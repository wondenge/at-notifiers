// Code generated by goa v3.1.3, DO NOT EDIT.
//
// airtime HTTP client CLI support package
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package client

import (
	"encoding/json"
	"fmt"

	airtime "github.com/wondenge/at-notifiers/gen/airtime"
)

// BuildValidationPayload builds the payload for the airtime validation
// endpoint from CLI flags.
func BuildValidationPayload(airtimeValidationBody string) (*airtime.AirtimeValidationPayload, error) {
	var err error
	var body ValidationRequestBody
	{
		err = json.Unmarshal([]byte(airtimeValidationBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"amount\": 500,\n      \"currencyCode\": \"KES\",\n      \"phoneNumber\": \"+254711XXXYYY\",\n      \"transactionId\": \"SomeTransactionID\"\n   }'")
		}
	}
	v := &airtime.AirtimeValidationPayload{
		TransactionID: body.TransactionID,
		PhoneNumber:   body.PhoneNumber,
		CurrencyCode:  body.CurrencyCode,
		Amount:        body.Amount,
	}

	return v, nil
}

// BuildStatusPayload builds the payload for the airtime status endpoint from
// CLI flags.
func BuildStatusPayload(airtimeStatusBody string) (*airtime.AirtimeStatus, error) {
	var err error
	var body StatusRequestBody
	{
		err = json.Unmarshal([]byte(airtimeStatusBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"requestId\": \"ATQid_SampleTxnId123\",\n      \"status\": \"Success\"\n   }'")
		}
	}
	v := &airtime.AirtimeStatus{
		RequestID: body.RequestID,
		Status:    body.Status,
	}

	return v, nil
}
