// Code generated by goa v3.1.3, DO NOT EDIT.
//
// iot endpoints
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package iot

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Endpoints wraps the "iot" service endpoints.
type Endpoints struct {
	IotNotifier endpoint.Endpoint
}

// NewEndpoints wraps the methods of the "iot" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		IotNotifier: NewIotNotifierEndpoint(s),
	}
}

// Use applies the given middleware to all the "iot" service endpoints.
func (e *Endpoints) Use(m func(endpoint.Endpoint) endpoint.Endpoint) {
	e.IotNotifier = m(e.IotNotifier)
}

// NewIotNotifierEndpoint returns an endpoint function that calls the method
// "iotNotifier" of service "iot".
func NewIotNotifierEndpoint(s Service) endpoint.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*IoTNotification)
		return s.IotNotifier(ctx, p)
	}
}
