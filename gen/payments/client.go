// Code generated by goa v3.1.3, DO NOT EDIT.
//
// payments client
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package payments

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "payments" service client.
type Client struct {
	PaymentNotifierEndpoint endpoint.Endpoint
	C2bNotifierEndpoint     endpoint.Endpoint
	B2cNotifierEndpoint     endpoint.Endpoint
}

// NewClient initializes a "payments" service client given the endpoints.
func NewClient(paymentNotifier, c2bNotifier, b2cNotifier endpoint.Endpoint) *Client {
	return &Client{
		PaymentNotifierEndpoint: paymentNotifier,
		C2bNotifierEndpoint:     c2bNotifier,
		B2cNotifierEndpoint:     b2cNotifier,
	}
}

// PaymentNotifier calls the "paymentNotifier" endpoint of the "payments"
// service.
func (c *Client) PaymentNotifier(ctx context.Context, p *PaymentNotification) (res string, err error) {
	var ires interface{}
	ires, err = c.PaymentNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// C2bNotifier calls the "c2bNotifier" endpoint of the "payments" service.
func (c *Client) C2bNotifier(ctx context.Context, p *C2BValidationNotification) (res string, err error) {
	var ires interface{}
	ires, err = c.C2bNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// B2cNotifier calls the "b2cNotifier" endpoint of the "payments" service.
func (c *Client) B2cNotifier(ctx context.Context, p *B2CValidationNotificationPayload) (res *B2CValidationNotificationResponse, err error) {
	var ires interface{}
	ires, err = c.B2cNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*B2CValidationNotificationResponse), nil
}
