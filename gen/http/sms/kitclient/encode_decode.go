// Code generated by goa v3.1.3, DO NOT EDIT.
//
// sms go-kit HTTP client encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package client

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/wondenge/at-notifiers/gen/http/sms/client"
	goahttp "goa.design/goa/v3/http"
)

// EncodeDeliveryReportRequest returns a go-kit EncodeRequestFunc suitable for
// encoding sms deliveryReport requests.
func EncodeDeliveryReportRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeDeliveryReportRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeDeliveryReportResponse returns a go-kit DecodeResponseFunc suitable
// for decoding sms deliveryReport responses.
func DecodeDeliveryReportResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeDeliveryReportResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeIncomingMessageRequest returns a go-kit EncodeRequestFunc suitable for
// encoding sms incomingMessage requests.
func EncodeIncomingMessageRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeIncomingMessageRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeIncomingMessageResponse returns a go-kit DecodeResponseFunc suitable
// for decoding sms incomingMessage responses.
func DecodeIncomingMessageResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeIncomingMessageResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeBulkSMSOptOutRequest returns a go-kit EncodeRequestFunc suitable for
// encoding sms bulkSMSOptOut requests.
func EncodeBulkSMSOptOutRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeBulkSMSOptOutRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeBulkSMSOptOutResponse returns a go-kit DecodeResponseFunc suitable for
// decoding sms bulkSMSOptOut responses.
func DecodeBulkSMSOptOutResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeBulkSMSOptOutResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeSubNotifierRequest returns a go-kit EncodeRequestFunc suitable for
// encoding sms subNotifier requests.
func EncodeSubNotifierRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeSubNotifierRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeSubNotifierResponse returns a go-kit DecodeResponseFunc suitable for
// decoding sms subNotifier responses.
func DecodeSubNotifierResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeSubNotifierResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}
