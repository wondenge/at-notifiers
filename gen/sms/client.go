// Code generated by goa v3.1.3, DO NOT EDIT.
//
// sms client
//
// Command:
// $ goa gen github.com/wondenge/at-notifiers/design

package sms

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "sms" service client.
type Client struct {
	DeliveryReportEndpoint  endpoint.Endpoint
	IncomingMessageEndpoint endpoint.Endpoint
	BulkSMSOptOutEndpoint   endpoint.Endpoint
	SubNotifierEndpoint     endpoint.Endpoint
}

// NewClient initializes a "sms" service client given the endpoints.
func NewClient(deliveryReport, incomingMessage, bulkSMSOptOut, subNotifier endpoint.Endpoint) *Client {
	return &Client{
		DeliveryReportEndpoint:  deliveryReport,
		IncomingMessageEndpoint: incomingMessage,
		BulkSMSOptOutEndpoint:   bulkSMSOptOut,
		SubNotifierEndpoint:     subNotifier,
	}
}

// DeliveryReport calls the "deliveryReport" endpoint of the "sms" service.
func (c *Client) DeliveryReport(ctx context.Context, p *DeliveryReport1) (res string, err error) {
	var ires interface{}
	ires, err = c.DeliveryReportEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// IncomingMessage calls the "incomingMessage" endpoint of the "sms" service.
func (c *Client) IncomingMessage(ctx context.Context, p *IncomingMessage1) (res string, err error) {
	var ires interface{}
	ires, err = c.IncomingMessageEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// BulkSMSOptOut calls the "bulkSMSOptOut" endpoint of the "sms" service.
func (c *Client) BulkSMSOptOut(ctx context.Context, p *BulkSMSOptOut1) (res string, err error) {
	var ires interface{}
	ires, err = c.BulkSMSOptOutEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// SubNotifier calls the "subNotifier" endpoint of the "sms" service.
func (c *Client) SubNotifier(ctx context.Context, p *SubscriptionNotification) (res string, err error) {
	var ires interface{}
	ires, err = c.SubNotifierEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
